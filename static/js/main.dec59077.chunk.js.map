{"version":3,"sources":["utils/currency.js","components/expense/expense.js","components/expense-table/expense-table.js","components/profit-rollup/profit-rollup.js","services/storage.js","App.js","reportWebVitals.js","index.js"],"names":["formatAmount","value","replace","parseAmount","OPTIONS","label","AddExpense","props","useState","amount","setAmount","type","setType","description","setDescription","className","direction","align","onChange","e","size","formatter","parser","min","placeholder","target","v","map","opt","Option","onClick","addExpense","disabled","ExpenseTable","moneyItems","deleteExpense","columns","title","dataIndex","key","render","text","_","record","shape","icon","DeleteOutlined","style","width","marginTop","pagination","position","pageSize","dataSource","mi","i","ProfitRollup","startDate","length","date","profit","reduce","acc","item","C","NegativeProfit","PositiveProfit","Date","toLocaleDateString","navigator","language","year","month","day","StorageService","LOCAL_STORAGE_KEY","items","localStorage","getItem","this","JSON","parse","state","get","setItem","stringify","MONEY_ITEMS_KEY","START_DATE_KEY","App","storedState","setMoneyItems","expense","set","newState","handleNewExpense","id","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dec59077.chunk.js","sourcesContent":["export const formatAmount = (value) =>\n  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nexport const parseAmount = (value) => value.replace(/\\$\\s?|(,*)/g, \"\");\n","import { InputNumber, Space, Select, Button, Input } from \"antd\";\nimport { useState } from \"react\";\nimport { parseAmount, formatAmount } from \"../../utils/currency\";\n\nimport \"./expense.scss\";\n\nconst OPTIONS = [\n  {\n    value: \"profit\",\n    label: \"Profit\",\n  },\n  { value: \"expense\", label: \"Expense\" },\n];\n\nexport const AddExpense = (props) => {\n  const [amount, setAmount] = useState(0);\n  const [type, setType] = useState(OPTIONS[0].value);\n  const [description, setDescription] = useState(\"\");\n\n  const reset = () => {\n    setAmount(0);\n    setDescription(\"\");\n  };\n\n  const handleSubmit = () => {\n    reset();\n    props.addExpense && props.addExpense({ amount, type, description });\n  };\n\n  return (\n    <Space className=\"sp-add-expense\" direction=\"vertical\" align=\"center\">\n      <InputNumber\n        className=\"sp-add-expense__field\"\n        value={amount}\n        onChange={(e) => setAmount(e)}\n        size=\"large\"\n        formatter={formatAmount}\n        parser={parseAmount}\n        min={0}\n      />\n\n      <Input\n        placeholder=\"description\"\n        className=\"sp-add-expense__field\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        size=\"large\"\n      ></Input>\n\n      <Select\n        className=\"sp-add-expense__field\"\n        value={type}\n        size=\"large\"\n        onChange={(v) => setType(v)}\n      >\n        {OPTIONS.map((opt) => (\n          <Select.Option key={opt.label} value={opt.value}>\n            {opt.label}\n          </Select.Option>\n        ))}\n      </Select>\n      <Button type=\"primary\" onClick={handleSubmit} disabled={!amount}>\n        Add\n      </Button>\n    </Space>\n  );\n};\n","import { Table, Button } from \"antd\";\n\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { formatAmount } from \"../../utils/currency\";\n\nexport const ExpenseTable = ({ moneyItems, deleteExpense }) => {\n  const columns = [\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (text) => <p>{formatAmount(text)}</p>,\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (_, record) => {\n        return (\n          <Button\n            type=\"danger\"\n            shape=\"circle\"\n            icon={<DeleteOutlined />}\n            // Key is the index of the expense array\n            onClick={() => deleteExpense && deleteExpense(record.key)}\n          ></Button>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Table\n      style={{ width: \"100%\", marginTop: \"10px\" }}\n      columns={columns}\n      pagination={{ position: \"topLeft\", pageSize: \"10\" }}\n      dataSource={moneyItems.map((mi, i) => ({ ...mi, key: i }))}\n    ></Table>\n  );\n};\n","import { formatAmount } from \"../../utils/currency\";\n\nconst formatDate = (date) => {\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n\n  return date.toLocaleDateString(navigator.language, options);\n};\nexport const ProfitRollup = ({ moneyItems, startDate }) => {\n  if (!moneyItems.length) {\n    return null;\n  }\n\n  const profit = moneyItems.reduce((acc, item) => {\n    if (item.type === \"expense\") {\n      acc -= item.amount;\n    } else {\n      acc += item.amount;\n    }\n\n    return acc;\n  }, 0);\n\n  const C = profit < 0 ? NegativeProfit : PositiveProfit;\n\n  return (\n    <div>\n      Since {formatDate(new Date(startDate))}\n      {/* If profit is negative, multiply it by -1 to show a positive number */}\n      <C amount={formatAmount(profit * (profit < 0 ? -1 : 1))} />\n    </div>\n  );\n};\n\nconst NegativeProfit = ({ amount }) => (\n  <span>\n    {\" \"}\n    you have <b>lost</b>: {amount}\n  </span>\n);\nconst PositiveProfit = ({ amount }) => (\n  <span>\n    {\" \"}\n    you have <b>gained</b>: {amount}\n  </span>\n);\n","// API to store app data\nclass storageService {\n  LOCAL_STORAGE_KEY = \"sf-moneyItems\";\n\n  get() {\n    const items = localStorage.getItem(this.LOCAL_STORAGE_KEY);\n\n    if (!items) {\n      return {};\n    }\n\n    return JSON.parse(items);\n  }\n\n  set(key, value) {\n    const state = { ...this.get(), [key]: value };\n\n    localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(state));\n  }\n}\n\nexport const StorageService = new storageService();\n","import { useState } from \"react\";\nimport \"./App.scss\";\n\nimport { AddExpense } from \"./components/expense\";\nimport { ExpenseTable } from \"./components/expense-table\";\nimport { ProfitRollup } from \"./components/profit-rollup/profit-rollup\";\nimport { StorageService } from \"./services/storage\";\n\nconst MONEY_ITEMS_KEY = \"moneyItems\";\nconst START_DATE_KEY = \"startDate\";\n\nfunction App() {\n  const storedState = StorageService.get();\n\n  const [moneyItems, setMoneyItems] = useState(\n    storedState[MONEY_ITEMS_KEY] || []\n  );\n\n  const handleNewExpense = (expense) => {\n    if (moneyItems.length === 0) {\n      // Persist the time of the first expense\n      StorageService.set(START_DATE_KEY, new Date());\n    }\n\n    // Newest items go first\n    const newState = [expense, ...moneyItems];\n\n    StorageService.set(MONEY_ITEMS_KEY, newState);\n    setMoneyItems(newState);\n  };\n\n  const deleteExpense = (id) => {\n    const newState = [...moneyItems.slice(0, id), ...moneyItems.slice(id + 1)];\n\n    StorageService.set(MONEY_ITEMS_KEY, newState);\n\n    setMoneyItems(newState);\n  };\n\n  return (\n    <div className=\"sp-main\">\n      <h2>Simple Finance</h2>\n      <AddExpense\n        addExpense={(expense) => handleNewExpense(expense)}\n      ></AddExpense>\n\n      <ProfitRollup\n        moneyItems={moneyItems}\n        startDate={storedState[START_DATE_KEY]}\n      ></ProfitRollup>\n      <ExpenseTable\n        moneyItems={moneyItems}\n        deleteExpense={deleteExpense}\n      ></ExpenseTable>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}